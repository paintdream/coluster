CMAKE_MINIMUM_REQUIRED (VERSION 3.1)
PROJECT (device)

SET (STDLIB stdc++)
STRING (REPLACE "/" "\\" LOCAL_SOURCE_DIR "${PROJECT_SOURCE_DIR}")
SET_PROPERTY (GLOBAL PROPERTY USE_FOLDERS ON)

SET (CMAKE_CXX_STANDARD 20)
INCLUDE_DIRECTORIES ("${PROJECT_SOURCE_DIR}/../../src/")
INCLUDE_DIRECTORIES ("${PROJECT_SOURCE_DIR}/ref/")
SET (LIBRARY_OUTPUT_PATH "${CMAKE_BINARY_DIR}")

FIND_PACKAGE (Vulkan)

FILE (GLOB_RECURSE DEVICE_SRC
	"${PROJECT_SOURCE_DIR}/src/*.cpp"
	"${PROJECT_SOURCE_DIR}/src/*.h"
	"${PROJECT_SOURCE_DIR}/ref/glm/*.hpp"
	"${PROJECT_SOURCE_DIR}/ref/glm/*.h"
	"${PROJECT_SOURCE_DIR}/ref/glm/*.cpp"
	"${PROJECT_SOURCE_DIR}/ref/vulkansdk/*.h"
	"${PROJECT_SOURCE_DIR}/ref/vulkansdk/*.hpp"
	"${PROJECT_SOURCE_DIR}/ref/vulkansdk/*.cpp"
)

FOREACH (FILE ${DEVICE_SRC}) 
	GET_FILENAME_COMPONENT(PARENT_DIR "${FILE}" PATH)

	# skip src or include and changes /'s to \\'s
	STRING (REGEX REPLACE "(\\./)?(src|include)/?" "" GROUP "${PARENT_DIR}")
	STRING (REPLACE "/" "\\" GROUP "${GROUP}")
	STRING (REPLACE "${LOCAL_SOURCE_DIR}" "" GROUP "${GROUP}")
	SOURCE_GROUP ("${GROUP}" FILES "${FILE}")
ENDFOREACH (FILE ${DEVICE_SRC})

ADD_SUBDIRECTORY_WITH_FOLDER ("ref" ref/libwebp)

IF (BUILD_MONOLITHIC)
	ADD_LIBRARY (device STATIC ${DEVICE_SRC})
ELSE (BUILD_MONOLITHIC)
	ADD_LIBRARY (device SHARED ${DEVICE_SRC})
	TARGET_COMPILE_DEFINITIONS (device PUBLIC DEVICE_IMPORT)
	TARGET_COMPILE_DEFINITIONS (device PRIVATE DEVICE_EXPORT)
ENDIF (BUILD_MONOLITHIC)

TARGET_INCLUDE_DIRECTORIES (device PRIVATE "${Vulkan_INCLUDE_DIRS}")
TARGET_LINK_LIBRARIES (device ${COLUSTER_CORE_LIBNAME} webp storage ${Vulkan_LIBRARIES})
